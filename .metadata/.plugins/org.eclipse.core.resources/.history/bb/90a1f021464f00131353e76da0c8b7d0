package com.example.myweek;

import dbmanager.Constants;
import dbmanager.PatientsDatabaseProvider;
import android.annotation.SuppressLint;
import android.app.ListActivity;
import android.app.LoaderManager.LoaderCallbacks;
import android.content.CursorLoader;
import android.content.Intent;
import android.content.Loader;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

@SuppressLint("NewApi")
public class MyDay extends ListActivity 
					implements LoaderCallbacks<Cursor>
{
	
	private SimpleCursorAdapter myAdapter, spinnerAdapter;
	private Spinner spinnerDay, spinnerPatient;
	private Button btnBack, btnAdd;
	private String day;
	private TextView title, spinnerPatientSelection, spinnerDaySelection;
	private Cursor spinCur;
	
    @SuppressLint("NewApi")
	@Override
    public void onCreate(Bundle savedInstanceState) 
    {         

       super.onCreate(savedInstanceState);    
       setContentView(R.layout.mydaypage);
       
       //Getting passed in variables
       Intent intent = getIntent();
       day = intent.getStringExtra("day_name");
       
       //Setting up the Title TextView
       title = (TextView)findViewById(R.id.titleDay);
       title.setText(day);
       
       //Setting up the Spinner with a list from the database
       spinnerPatient = (Spinner)findViewById(R.id.spinnerPatientSelectionMyDay);
       spinnerDay     = (Spinner)findViewById(R.id.spinnerDaySelectionMyDay);
       setUpDaySpinner();
       setSpinnerPatientSelection();
       setSpinnerDaySelection();
       
       String[] from = new String[] { Constants.COLUMN_PATIENT_NAME };
       
       int[] to = new int[] { R.id.checkbox1 };
       
       myAdapter = new SimpleCursorAdapter(this, R.layout.checkboxes_layout, null, from, to, 0);
       setListAdapter(myAdapter);
       
       getLoaderManager().initLoader(1, null, this);
       registerForContextMenu(getListView());
       getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
    // getListView().setTextFilterEnabled(true);
       
       
       btnBack = (Button)findViewById(R.id.btnBackMyDay);
       btnAdd  = (Button)findViewById(R.id.btnAddMyDay);
       
       btnBack.setOnClickListener(myButtonListener);
       btnAdd .setOnClickListener(myButtonListener);
       


   }//End of On Create
    
	private void setUpDaySpinner() 
	{
		String[] projection = new String[] { Constants._id, Constants.COLUMN_PATIENT_NAME };
		
		spinCur = getContentResolver().query(PatientsDatabaseProvider.TABLE_URI, 
				projection, null, null, null);
		
		String[] columns = new String[] { Constants.COLUMN_PATIENT_NAME };
		int[] to = new int[] { android.R.id.text1, R.id.spinnerPatientSelectionMyDay };
		
		spinnerAdapter = new SimpleCursorAdapter(this, android.R.layout.simple_spinner_item,
							spinCur, columns, to, 0);
		spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_item);
		spinnerPatient.setAdapter(spinnerAdapter);
	} 

	private OnClickListener myButtonListener = new OnClickListener()
	{
		@Override
		public void onClick(View v)
		{
			switch (v.getId())
			{
				case R.id.btnBackMyDay:		Intent startMyWeekPageActivity = new Intent(MyDay.this, myWeekPage.class);
    										startActivity(startMyWeekPageActivity);
    										break;
				case R.id.btnAddMyDay:		addPatient();
											break;
			}
		}


	}; 
 
	
	private void addPatient() 
	{
		String patientSelection = spinnerPatientSelection.getText().toString();
		String daySelection     = spinnerDaySelection.getText().toString();
		
		Toast.makeText(this, patientSelection, Toast.LENGTH_LONG).show();
	
		if(daySelection.equals("Select A Day") || daySelection.equals("Clear Schedule"))
			Toast.makeText(this, "You must select a day.", Toast.LENGTH_SHORT).show();
		else if(patientSelection.isEmpty())
			Toast.makeText(this, "You must select a Patient", Toast.LENGTH_SHORT).show();
	}
	
	
	//To get the selection from the spinner for Patient.
	private void setSpinnerPatientSelection()
	{
		spinnerPatient.setOnItemSelectedListener(
		    new AdapterView.OnItemSelectedListener() {

				@Override
				public void onItemSelected(AdapterView<?> arg0, View view,
						int arg2, long arg3) 
				{
					spinnerPatientSelection = (TextView) view;
				}

				@Override
				public void onNothingSelected(AdapterView<?> arg0) 
				{
					//Nothing needed here
				}
		    }
		);
	}
	
	//To get the selection from the spinner for Day.
	private void setSpinnerDaySelection()
	{
		spinnerDay.setOnItemSelectedListener(
		    new AdapterView.OnItemSelectedListener() {

				@Override
				public void onItemSelected(AdapterView<?> arg0, View view,
						int arg2, long arg3) 
				{
					spinnerDaySelection = (TextView) view;
				}

				@Override
				public void onNothingSelected(AdapterView<?> arg0) 
				{
					//Nothing needed here
				}
		    }
		);
	}
	


	@SuppressLint("NewApi")
	@Override
	public Loader<Cursor> onCreateLoader(int id, Bundle args) 
	{
		String whereClause;
		
		if(day.equals("Monday"))
			whereClause = Constants.COLUMN_MONDAY;
		else if(day.equals("Tuesday"))
			whereClause = Constants.COLUMN_TUESDAY;
		else if(day.equals("Wednesday"))
			whereClause = Constants.COLUMN_WEDNESDAY;
		else if(day.equals("Thursday"))
			whereClause = Constants.COLUMN_THURSDAY;
		else
			whereClause = Constants.COLUMN_FRIDAY;
		
		CursorLoader cursorLoader = new CursorLoader(this,
				PatientsDatabaseProvider.TABLE_URI, null, whereClause, null, null);
		return cursorLoader;
	}

	@SuppressLint("NewApi")
	@Override
	public void onLoadFinished(Loader<Cursor> arg0, Cursor myCursor) {
		myAdapter.swapCursor(myCursor);
		
	}

	@Override
	public void onLoaderReset(Loader<Cursor> arg0) {
		myAdapter.swapCursor(null);
		
	}
}
	