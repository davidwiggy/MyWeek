package com.example.myweek;

import java.util.ArrayList;
import dbmanager.Constants;
import dbmanager.PatientsDatabaseProvider;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.ContentUris;
import android.content.ContentValues;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

public class ManageClients extends ListActivity
{
	String[] namesArr;
	private ArrayAdapter<String> myAdapter;
	private Button btnBack, btnAdd;
	EditText patientName;
	ListView lv;
	
	@Override
    public void onCreate(Bundle savedInstanceState) 
    {         
       super.onCreate(savedInstanceState);    
       setContentView(R.layout.manage_clients);
       
       reloadList();

       patientName = (EditText)findViewById(R.id.enter_patient_name);
       btnBack = (Button)findViewById(R.id.btnBackManageClients);
       btnAdd = (Button)findViewById(R.id.btnAddManageClients);
       setBtnBack();
       setBtnAdd();
       
       lv = getListView();
  
      

       lv.setOnItemClickListener(new ListView.OnItemClickListener() 
       {

           @Override
           public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
                           long arg3)
           {
        	   if (lv.isItemChecked(arg2))
               {
                       Log.d("this is it", (String) lv.getItemAtPosition(arg2));
               } 
           }
       }); 
       
       longClickHandler();
       

   }//End of onCreate
    
	
	//Setting up the long click listener
	private void longClickHandler()
	{
		       lv.setOnItemLongClickListener(new ListView.OnItemLongClickListener() 
		       {

		    	   public boolean onItemLongClick(AdapterView<?> arg0, View arg1,
                   int pos, long id) 
		    	   {
		    		   deleteRecordForLongClick(pos);
		    		   return true;
		    	   }
		       }); 
	}
	
	private void deleteRecordForLongClick (int pos)
	{
		
		final int num = pos;
		//Show an alert dialog to confirm deletion
		AlertDialog dialog = new AlertDialog.Builder(this).create();
		dialog.setMessage("Are you sure you want to delete " + namesArr[num] + "?");

		//Set up two buttons. Left one is BUTTON_POSITIVE
		dialog.setButton(DialogInterface.BUTTON_POSITIVE, "Delete record",
			new DialogInterface.OnClickListener()
			{	
				@Override
				public void onClick(DialogInterface dialog, int which)
				{
					String[] valuesToDelete = new String[] {namesArr[num]};
					String column = Constants.COLUMN_PATIENT_NAME + " = " + "'" + namesArr[num] + "'";
					
					
					//Delete one record..
					Toast.makeText(getApplicationContext(), "Patient " + namesArr[num] + " deleted!", Toast.LENGTH_SHORT).show();
					getContentResolver().delete(
							PatientsDatabaseProvider.TABLE_URI, column, null);
					reloadList();
				}
			});

		//This is the right button in the dialog box
		dialog.setButton(DialogInterface.BUTTON_NEGATIVE, "Cancel",
			new DialogInterface.OnClickListener()
			{
				@Override
				public void onClick(DialogInterface dialog, int which)
				{
					//Do nothing. Dialog will simply disappear.
				}
			});
		dialog.show();
	}//END deleteRecord
	
	private void setBtnAdd()
    {
    	btnAdd.setOnClickListener
    	(
    		new View.OnClickListener() 
    		{
	
				public void onClick(View v) 
				{
					saveRecordToDB();
				}
			});
    }
    
	private void setBtnBack()
    {
        btnBack.setOnClickListener
        (
        	new View.OnClickListener() 
        	{
        		public void onClick(View v)
        		{
        			Intent startMainActivity = new Intent(ManageClients.this, MyWeekMainActivity.class);
        			startActivity(startMainActivity);
        		}
        	});
    }


	private void saveRecordToDB() 
	{
		//Set up a ContentValues object, simply a set of key/value pairs.
		Log.d("Save Record", "Record");
		ContentValues values = new ContentValues();
		values.put(Constants._id, 0);	//_id of 0 means a new record
		values.put(Constants.COLUMN_PATIENT_NAME, patientName.getText().toString());

		Uri recordUri = getContentResolver().insert(PatientsDatabaseProvider.TABLE_URI, values);

		long rowId = ContentUris.parseId(recordUri);
		
		//If the returned id is valid, clear out EditTexts and display a Toast message
		if (rowId >= 0)
		{
			patientName.setText("");
			//Tell the user
			Toast.makeText(this, "New patient " + patientName.getText().toString() + " saved!", Toast.LENGTH_SHORT).show();
			reloadList();
		}
		else
		{
			Toast.makeText(this, "Record could not be created!", Toast.LENGTH_SHORT).show();
		}
	}//End of Save Records
	
	private void reloadList() 
	{
		Log.d("InRELOAD", "dsfgsdfg");
	    getNameColumns();
	    myAdapter = new ArrayAdapter<String>(this, R.layout.checkboxes_layout, namesArr);
        setListAdapter(myAdapter);
        	
        getListView().setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
        getListView().setTextFilterEnabled(true);
	
	}

	private void getNameColumns()
	{
		Log.d("IN NAMES", "adffds");
		String[] columns = new String[] { Constants.COLUMN_PATIENT_NAME };
		
		Cursor cursor = getContentResolver().query(PatientsDatabaseProvider.TABLE_URI, 
				columns, null, null, null);
				
		ArrayList<String> names = new ArrayList<String>();
		if(cursor.moveToFirst())
		{
			do
			{
				int ct = 0;
				names.add(cursor.getString(ct));
				ct++;
			}while (cursor.moveToNext());
		}
		
		namesArr = (String[]) names.toArray(new String[names.size()]);
	}//End of getNameColumns
}
